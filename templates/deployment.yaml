{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: gitea
  namespace: {{ .Release.Namespace | default .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "gitea")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: gitea
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: "gitea"
        minAllowed:
          cpu: 100m
          memory: 512Mi
        maxAllowed:
          cpu: 2
          memory: 4Gi
{{- end }}

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: gitea
  namespace: {{ .Release.Namespace | default .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "gitea")) | nindent 2 }}
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: gitea

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitea
  namespace: {{ .Release.Namespace | default .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "gitea")) | nindent 2 }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.gitea.replicas | default 1 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: gitea
  template:
    metadata:
      labels:
        app: gitea
        {{- if .Values.gitea.podLabels }}
        {{- toYaml .Values.gitea.podLabels | nindent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.gitea.podAnnotations }}
        {{- toYaml .Values.gitea.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      priorityClassName: {{ .Values.gitea.priorityClassName | default "default" }}
      {{- if .Values.gitea.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.gitea.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
        - name: gitea
          image: "{{ .Values.gitea.image.repository | default "gitea/gitea" }}:{{ .Values.gitea.image.tag | default "1.20.0" }}"
          imagePullPolicy: {{ .Values.gitea.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
            - name: ssh
              containerPort: 22
              protocol: TCP
          env:
            - name: GITEA__database__DB_TYPE
              value: "postgresql"
            - name: GITEA__database__HOST
              value: "{{ .Values.postgresql.host | default "gitea-postgresql" }}"
            - name: GITEA__database__NAME
              value: "{{ .Values.postgresql.database | default "gitea" }}"
            - name: GITEA__database__USER
              value: "{{ .Values.postgresql.username | default "gitea" }}"
            - name: GITEA__database__PASSWD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.existingSecret | default "gitea-postgresql" }}
                  key: {{ .Values.postgresql.passwordKey | default "password" }}
          volumeMounts:
            - name: gitea-data
              mountPath: "/data"
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            timeoutSeconds: 3
          resources:
            {{- if .Values.gitea.resources }}
            {{- toYaml .Values.gitea.resources | nindent 12 }}
            {{- else }}
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 2
              memory: 2Gi
            {{- end }}
          {{- include "helm_lib_module_container_security_context_run_as_user_deckhouse_pss_restricted" . | nindent 10 }}
      volumes:
        - name: gitea-data
          persistentVolumeClaim:
            claimName: gitea-data
      {{- include "helm_lib_module_pod_security_context_run_as_user_deckhouse" . | nindent 6 }}
      {{- if .Values.gitea.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.gitea.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.gitea.tolerations }}
      tolerations:
        {{- toYaml .Values.gitea.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.gitea.affinity }}
      affinity:
        {{- toYaml .Values.gitea.affinity | nindent 8 }}
      {{- end }}